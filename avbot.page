![avbot](/Avbot.png)

== avbot = Q大婶  ==

avbot 是一个多协议聊天秘书机器人.


avbot 连通 IRC、XMPP 和  QQ群，并能实时记录聊天信息。每日自动生成新的日志文件。在聊天中可以使用 .qqbot 打头的命令控制机器人的行为.

== 功能介绍 ==

# 登录QQ，记录群消息
# 登录IRC，记录IRC消息 
# 登录XMPP，记录XMPP聊天室消息 
# 将群消息转发到IRC和XMPP聊天室 
# 将IRC消息转发到QQ群和XMPP聊天室 
# 将XMPP聊天室消息转发到QQ群和IRC 
# QQ图片转成 url 链接给 IRC和XMPP聊天室 
# 登录 EMAIL (使用 pop3 协议), 获取邮件, 并转发到聊天室 
# 将聊天内容转化为邮件发送到指定的邮箱(在聊天室使用 .qqbot mail to 命令)

= 获取 avbot =

== 预编译包 ==

为了方便Q友，我特意为　CentOS6/RHEL6　准备了 RPM 包。该　RPM 是静态链接的boost，因此并不需要系统里升级 boost 库。

等啥，到 [https://sourceforge.net/projects/avbot/files/rpm 这里] 下载安装吧.

另外 Windows 版本也提供了， 到[https://sourceforge.net/projects/avbot/files/win32 这里] 下载。

==编译avbot==

使用前请参考 [[编译avbot]] [[avbot_centos|linux小白在centos下编译avbot]]

=使用=

== 命令行 ==

执行
 avbot --help

查看命令行


== 配置文件 ==

配置文件请参考 [https://github.com/avplayer/avbot/blob/master/qqbotrc.example qqbotrc.example]

读取配置文件 /etc/qqbotrc

配置文件的选项就是去掉 -- 的命令行选项。比如命令行接受 --qqnum 
配置文件就写

  qqnum=qq号码


=== 配置 qq ===

 qqnum=qq号码
 qqpwd=qq密码

如果QQ出现验证码, avbot 会在IRC和控制台同时提示输入验证码, 只要打开 qqlog (未设置的情况下就在当前目录)文件夹, 查看vercode.jpeg 然后输入验证码即可.

不过, 如果avbot是跑在服务器后台上的, 如果不想手工输入, 可以使用 [[deCAPTCHA|自动验证码识别服务]], 点开链接查看具体的配置办法就可以了。

=== IRC频道 ===

频道名不带 # 比如

 ircrooms=ubuntu-cn,gentoo-cn,fedora-zh

逗号隔开, avbot 会分别加入这些聊天室.

=== XMPP 聊天室 ===

 xmpprooms=linuxcn@im.linuxapp.org,avplayer@im.linuxapp.org

也是逗号隔开

=== 频道组 ===

使用 --map 功能将频道和QQ群绑定成一组。被绑定的组内消息互通。

用法：

 map=qq:123456,irc:avplayer;qq:3344567,irc:otherircchannel,mail,xmpp:linuxcn

频道名不带 # , XMPP 聊天室不带 @ 后面的服务器地址。

也可以在 /etc/qqbotrc 或者 ~/.qqbotrc 写，每行一个，不带 --。
如
 map=qq:123456,irc:avplayer;qq:3344567,irc:otherircchannel,mail,xmpp:linuxcn;

频道组用 ; 隔开。组成份间用,隔离。

这个命令形式的意思四建立2个频道组. 第一个频道组包含 QQ群123456,irc频道\#avplayer 第二个频道组包含qq群3344567,irc频道\#otherircchannel, xmpp聊天室linuxcn@im.linuxapp.org. 以及接受邮件转发.
在同一个频道组的群也好,irc频道也罢, XMPP聊天室也好, 相互之间转发消息. 不在一个频道组的则不转发. 像沙箱一样的隔离掉,互不干扰.

= 聊天中使用 avbot 功能 = 

== .qqbot help ==

avbot 提供了 .qqbot 起始的命令用于在聊天中调教机器人.

详细的情况请参考  .qqbot help

== .vote ==

avbot 提供了投票机制, 详情请参考 [[avbot_vote]]

= 扩展 avbot =

avbot 提供了3种机制用于扩展.

==  C++ extension ==
第一种机制最灵活, 当然难度也最大, 就是编写 extensions , 参考 extension 目录下的几个扩展, 自己写一个, 然后在 extension.cpp 添加调用即可. 因为难度太高, 所以不建议大家使用这个机制.

c++ extension 需要考虑到avbot是以异步的形式调用的extension, 因此不能阻塞. 自己要做什么费时操作也必须使用异步.

大大增加了难度.

== lua script ==
avbot 提供的第二种机制是 LUA 绑定. 不过 avbot 预编译的二进制没有启用 lua 绑定. 需要自己启用. 也不建议大家使用这个机制.

[[avbot_enable_lua|启用lua绑定]]

== RPC ==

第三种机制最方便, 强烈的建议大家使用. 那就是 [[avbot_rpc|avbot rpc 机制]]

= 获得帮助 =

你可以到 [http://avboost.com 社区论坛] 求助, 注意发帖到 '''社区项目''' 版块

我们在 IRC（irc.freenode.net ） 的 \#avplayer 频道。 QQ群 3597082 还有 XMPP聊天室 avplayer@im.linuxapp.org


= 帮助 avbot =

avbot 目前的维护者是 mosir. 

[[helpus | avbot 需要你的帮助!]]

== 开发 avbot ==

avbot 最为需要的, 其实是来自开发者的帮助. 要参与 avbot 的开发, 请参考这个  [[avbot_dev| avbot 开发者中心 ]]
